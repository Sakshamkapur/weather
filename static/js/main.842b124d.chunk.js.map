{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","city","dataWeather","dataForecast","celsius","iconClass","dataForcast","colorClass","chartData","labels","datasets","label","data","backgroundColor","load","str","split","map","word","toUpperCase","substring","join","icon","weather","substr","setState","currenttemp","main","temp","Math","round","color","self","APP_ID","input","axios","get","params","q","units","appid","then","res","dt","Date","toString","current","console","log","chooseIcon","changeBackground","s","cnt","forecast","length","list","i","push","date","fahrenheit","high","max","low","min","todayDate","toISOString","slice","minusseven","setDate","getDate","format","enddate","key","tempchartData","parseInt","maxtempC","mintempC","sunHour","uvIndex","_ref","_this2","react_default","a","createElement","className","style","height","width","minHeight","paddingTop","id","type","onChange","e","target","value","placeholder","onClick","getWeather","sys","country","name","fullDay","titleCase","description","wind","speed","humidity","toggleCelsius","href","index","marginTop","defineProperty","es","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.842b124d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport axios from 'axios';\nimport {Line} from 'react-chartjs-2';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      dataWeather: [],\n      dataForecast: [],\n      celsius: false,\n      iconClass: '',\n      dataForcast:[],\n      colorClass: '',\n      chartData:{\n        labels: [],\n        datasets:[\n          {\n            label:'Sun Hour',\n            data: [],\n            backgroundColor:'rgba(255, 206, 86, 0.6)'\n          },\n          {\n            label:'UV Index',\n            data: [],\n            backgroundColor:'rgba(153, 102, 255, 0.6)'\n          },\n          {\n            label:'Maximum temperature',\n            data: [],\n            backgroundColor:'rgba(54, 162, 235, 0.6)'\n          },\n          {\n            label:'Minimum temperature',\n            data: [],\n            backgroundColor:'rgba(255, 99, 132, 0.6)'\n          }\n        ]\n      },\n      load: true\n    };\n  }\n\n  fullDay(str) {\n    switch (str) {\n      case 'Tue':\n        return 'Tuesday';\n      case 'Wed':\n        return 'Wednesday';\n      case 'Thu':\n        return 'Thursday';\n      case 'Sat':\n        return 'Saturday';\n      default:\n        return str + 'day';\n    }\n  }\n\n  titleCase(str) {\n    return str.split(' ').map(function (word) {\n      return word[0].toUpperCase() + word.substring(1);\n    }).join(' ');\n  }\n\n  chooseIcon(){\n    var icon;\n    switch (this.state.dataWeather.weather[0].icon) {\n        case '01d':\n          icon = ('wi wi-day-sunny');\n          break;\n        case '02d':\n          icon = ('wi wi-day-sunny-overcast');\n          break;\n        case '01n':\n          icon = ('wi wi-night-clear');\n          break;\n        case '02n':\n          icon = ('wi wi-night-partly-cloudy');\n          break;\n      }\n\n      switch (this.state.dataWeather.weather[0].icon.substr(0, 2)) {\n        case '03':\n          icon = ('wi wi-cloud');\n          break;\n        case '04':\n          icon = ('wi wi-cloudy');\n          break;\n        case '09':\n          icon = ('wi wi-showers');\n          break;\n        case '10':\n          icon = ('wi wi-rain');\n          break;\n        case '11':\n          icon = ('wi wi-thunderstorm');\n          break;\n        case '13':\n          icon = ('wi wi-snow');\n          break;\n        case '50':\n          icon = ('wi wi-fog');\n          break;\n      }\n      this.setState({iconClass: icon});\n  }\n\n  toggleCelsius() {\n    var currenttemp = this.state.dataWeather;\n    if(this.state.celsius){\n      currenttemp.main.temp = Math.round((currenttemp.main.temp * (9/5))+ 32);\n    }else{\n      currenttemp.main.temp = (Math.round((currenttemp.main.temp - 32) * (5 / 9)));\n    }\n    this.setState({celsius: !this.state.celsius, dataWeather: currenttemp}); //add class active\n  }\n\n  changeBackground(){\n    var temp = this.state.dataWeather.main.temp;\n    var color;\n    if (temp >= 80) color = 'hot';\n      else if (temp >= 70) color = 'warm';\n      else if (temp >= 60) color = 'cool';\n      else color = 'cold';\n    this.setState({colorClass: color});\n  }\n  getWeather(){\n    var self = this;\n    this.setState({load: true});\n    const APP_ID = \"58b6f7c78582bffab3936dac99c31b25\";\n    var input = this.state.city;\n    \n    // weather fetch\n    axios.get('//api.openweathermap.org/data/2.5/weather', {\n    params: {\n      q: input,\n      units: 'imperial',\n      appid: APP_ID\n    }\n    })\n    .then(function (res) {\n      var dt = new Date(res.data.dt * 1000).toString().split(' ');\n      res.data.current = dt;\n      console.log(res);\n      self.setState({dataWeather:res.data});\n      self.chooseIcon();\n      self.changeBackground();\n    })\n\n    //forcast fetch\n    var s=this;\n    axios.get('//api.openweathermap.org/data/2.5/forecast/daily', {\n    params: {\n      q: input,\n      units: 'imperial',\n      cnt: '6',\n      appid: APP_ID\n    }\n    })\n    .then(function (res) {\n      var forecast = [];\n      var length = res.data.list.length;\n      for (var i = 1; i < length; i++) {\n        forecast.push({\n          date: new Date(res.data.list[i].dt * 1000).toString().split(' ')[0],\n          fahrenheit: {\n            high: Math.round(res.data.list[i].temp.max),\n            low: Math.round(res.data.list[i].temp.min),\n          },\n          celsius: {\n            high: Math.round((res.data.list[i].temp.max - 32) * (5 / 9)),\n            low: Math.round((res.data.list[i].temp.min - 32) * (5 / 9))\n          }\n        });\n      }\n      console.log(forecast);\n      s.setState({dataForcast:forecast});\n\n    })\n\n    var todayDate = new Date().toISOString().slice(0,10);\n    console.log(todayDate);\n    var minusseven = new Date(todayDate);\n    minusseven = new Date(minusseven.setDate(minusseven.getDate()-6)).toISOString().slice(0,10);\n    console.log(minusseven);\n\n    axios.get('//api.worldweatheronline.com/premium/v1/past-weather.ashx', {\n    params: {\n      q: input,\n      format: 'json',\n      date: minusseven,\n      enddate: todayDate,\n      key: \"5e1a1ce3f2784c3cb22135946191503\"\n    }\n    })\n    .then(function (res) {\n      console.log(res);\n      var tempchartData = self.state.chartData;\n      var data = res.data.data.weather;\n      for(let i=0;i<data.length;i++){\n        tempchartData.labels[i] = data[i].date;\n        tempchartData.datasets[2].data[i] = parseInt(data[i].maxtempC);\n        tempchartData.datasets[3].data[i] = parseInt(data[i].mintempC);\n        tempchartData.datasets[0].data[i] = parseInt(data[i].sunHour);\n        tempchartData.datasets[1].data[i] = parseInt(data[i].uvIndex);\n      }\n      self.setState({chartData: tempchartData,load: false});\n    })\n  }\n  render() {\n    return (\n      <div className={this.state.colorClass} style={{height: \"100%\",backgroundColor:this.state.colorClass ? \"\":\"rgba(54, 162, 235, 0.6)\"}}>\n      <div className={this.state.colorClass} style={{width: \"100%\",minHeight: \"100%\",backgroundColor: this.state.colorClass == ''? 'rgba(255, 99, 132, 0.6)' : ''}}>\n        <div className=\"wrapper\" style={{paddingTop: this.state.colorClass == ''? \"15%\": \"\"}}>\n          <div className={this.state.dataWeather.length !==0 ? \"\":\"cityinput\"} >  \n            <input className=\"searchbar transparent\" id='search' type='text' onChange={e => this.setState({city: e.target.value})} placeholder='enter city, country' />\n            <input className=\"button transparent\" id='button' onClick={()=>this.getWeather()} type=\"submit\" value='GO' />\n          </div>\n      {this.state.dataWeather.length !== 0 &&\n          ( <div>\n          <div className='panel'>\n            <h2 className='city' id='city'>\n            { this.state.dataWeather.sys.country? this.state.dataWeather.name + ', ' + this.state.dataWeather.sys.country: this.state.dataWeather.name}\n            </h2>\n            <div className='weather' id='weather'>\n              <div className='group secondary'>\n                <h3 id='dt'>{this.fullDay(this.state.dataWeather.current[0]) + ' ' + this.state.dataWeather.current[4].substring(0, 5)}</h3>\n                <h3 id='description'>{this.titleCase(this.state.dataWeather.weather[0].description)}</h3>\n              </div>\n              <div className='group secondary'>\n                <h3 id='wind'>{'Wind: ' + this.state.dataWeather.wind.speed + ' mph'}</h3>\n                <h3 id='humidity'>{'Humidity ' + this.state.dataWeather.main.humidity + '%'}</h3>\n              </div>\n              <div className='temperature' id='temperature'>\n                <h1 className='temp' id='temp'>\n                  <i id='condition' className={this.state.iconClass}></i> \n                  <span id='num'>{Math.round(this.state.dataWeather.main.temp)}</span>\n                  <a className={this.state.celsius ?'fahrenheit' :'fahrenheit active'} onClick={()=>this.toggleCelsius()} id='fahrenheit' href=\"#\">&deg;F</a>\n                  <span className='divider secondary'>|</span>\n                  <a className={this.state.celsius ?'celsius active' :'celsius'} onClick={()=>this.toggleCelsius()} id='celsius' href=\"#\">&deg;C</a>\n                </h1>\n              </div>\n              <div className='forecast' id='forecast'>\n                {this.state.dataForcast.map((data,index) => {\n                  return (\n                     <div key={index} className=\"block\">\n                      <h3 className=\"secondary\">{data.date}</h3>\n                      <h2 className=\"high\">{this.state.celsius ? data.celsius.high : data.fahrenheit.high }</h2>\n                      <h4 className=\"secondary\">{this.state.celsius ? data.celsius.low : data.fahrenheit.low }</h4>\n                    </div>\n                  );\n                })\n                }\n              </div>\n            </div>\n          </div>\n         </div> )}\n        <div style={{marginTop: \"5%\",backgroundColor: \"black\",marginTop: \"20px\",marginBottom: \"20px\"}}>\n          {!this.state.load && <Line data={this.state.chartData}/>}\n        </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}